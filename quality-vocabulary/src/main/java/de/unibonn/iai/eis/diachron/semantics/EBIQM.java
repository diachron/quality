/* CVS $Id: $ */
package de.unibonn.iai.eis.diachron.semantics; 
import org.apache.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from file:/Users/jeremy/Documents/Codebase/Repository/quality/quality-vocabulary/src/main/resources/vocabularies/dqm/ebiqm.ttl 
 * @author Auto-generated by schemagen on 11 Jul 2017 16:39 
 */
public class EBIQM {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.diachron-fp7.eu/ebiqm#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Property hasDefinedOntologyAuthorMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasDefinedOntologyAuthorMetric" );
    
    public static final Property hasOBOFoundryMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasOBOFoundryMetric" );
    
    public static final Property hasObsoleteConceptsInOntologyMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasObsoleteConceptsInOntologyMetric" );
    
    /** <p>Links Conciseness Dimension with Ontology Versioning Conciseness Metric</p> */
    public static final Property hasOntologyVersionConcisenessMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasOntologyVersionConcisenessMetric" );
    
    public static final Property hasPOBODefinitionUsageMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasPOBODefinitionUsageMetric" );
    
    public static final Property hasSynonymUsageMetric = m_model.createProperty( "http://www.diachron-fp7.eu/ebiqm#hasSynonymUsageMetric" );
    
    /** <p>Checks whether the creator &lt;efo:creator&gt; is defined in the ontology.</p> */
    public static final Resource DefinedOntologyAuthorMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#DefinedOntologyAuthorMetric" );
    
    /** <p>Detects non reputable resources by retrieving URI of resources from data sets 
     *  and comparing them with URI found in reputable resources.</p>
     */
    public static final Resource OBOFoundryMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#OBOFoundryMetric" );
    
    /** <p>Provides a measure for the number of classes and properties in an ontology 
     *  which are marked as depricated. If an ontology is making lots of obsolete 
     *  concepts between different versions, then this is an indicator that the ontology 
     *  is going through a lot of changes, and is potentially in a state of poor quality</p>
     */
    public static final Resource ObsoleteConceptsInOntologyMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#ObsoleteConceptsInOntologyMetric" );
    
    /** <p>Provides a measure for checking singleton instances of the use-case specific 
     *  defined owl:ontologyVersion property</p>
     */
    public static final Resource OntologyVersionConcisenessMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#OntologyVersionConcisenessMetric" );
    
    /** <p>Provides a measure for an Ontology checking the usage of &lt;pobo:def&gt; 
     *  in defined classes.</p>
     */
    public static final Resource POBODefinitionUsageMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#POBODefinitionUsageMetric" );
    
    /** <p>Measures the number of classes which has a synonym &lt;efo:alternative_term&gt; 
     *  described.</p>
     */
    public static final Resource SynonymUsageMetric = m_model.createResource( "http://www.diachron-fp7.eu/ebiqm#SynonymUsageMetric" );
    
}
